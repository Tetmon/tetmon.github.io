@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .reverse {
    animation-direction: reverse;
  }

  .fog {
    mask-image: linear-gradient(to bottom, hsl(0 0% 0% / 0) 0%, hsl(0 0% 0% / 1) 5%, hsl(0 0% 0% / 1) 95%, hsl(0 0% 0% / 0));
  }

  .header-mask {
    -webkit-mask-image: linear-gradient(to bottom, black 4.2rem, transparent);
    mask-image: linear-gradient(to bottom, black 4.2rem, transparent);
    backdrop-filter: blur(10px);
  }

  .scrollbar-hide {
    scrollbar-width: none;
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  @media (pointer:coarse) and (orientation: landscape) {
    .pointer-coarse-video-l {
      max-height: 100%;
    }
  }

  @media (pointer:coarse) and (orientation: portrait) {
    .pointer-coarse-video-p {
      max-height: 50%;
    }
  }

  @media (pointer:fine) {
    .pointer-coarse-video-f {
      max-height: 50%;
    }
  }

  .text-stroke {
    background-image: linear-gradient(180deg, #0ea5e9bf -40.72%, rgba(135, 252, 196, .06) 99.03%);
    -webkit-text-stroke: 1px transparent !important;
    background-clip: text;
    color: #121212;
  }
}

* {
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

:root {
  --foreground-rgb: 51, 51, 51;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

strong {
  font-weight: 600;
}

body,
input,
select {
  color: rgb(var(--foreground-rgb));
}


/* h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-sans), sans-serif;
  letter-spacing: -0.125rem;
} */

/* .portal-fade-enter {
  opacity: 0.01;
}

.portal-fade-enter-active {
  opacity: 1;
  transition: opacity 400ms ease-in-out;
}

.portal-fade-exit {
  opacity: 1;
}

.portal-fade-exit-active {
  opacity: 0.01;
  transition: opacity 400ms ease-in-out;
}

html[data-request-demo=true] header g {
  fill: white;
}

html[data-request-demo=true] header button[data-label="request-demo"] {
  visibility: hidden;
}

html[data-request-demo=true] body,
html[data-show-menu=true] body {
  overflow: hidden;
}

html[data-request-demo=true] header button[data-label="burger"] {
  color: white;
}

.card-appear {
  opacity: 0;
}

.card-appear-active {
  opacity: 1;
  transition: opacity 200ms;
}

.card-enter {
  opacity: 0;
}

.card-enter-active {
  opacity: 1;
  transition: opacity 200ms;
}

.snapshot-appear {
  opacity: 0;
}

.snapshot-appear-active {
  opacity: 1;
  transition: opacity 400ms;
}

.snapshot-enter {
  opacity: 0;
}

.snapshot-enter-active {
  opacity: 1;
  transition: opacity 400ms;
} */

svg {
  overflow: visible;
}

.animated-group {
  transform-origin: center bottom;
  animation: squish 2s ease-out forwards;
  transform: scaleY(0.75);
}

/* @keyframes squish {
  0% {
    transform: scaleY(0.75);
  }

  100% {
    transform: scaleY(1);
  }
} */

.iso-grid-container {
  width: 800px;
  height: 800px;
  perspective: 1100px;
  position: absolute;
  top: 0;
  top: -152px;
  left: 20%;
}

.iso-grid {
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(#ddd 0,
      #ddd 1px,
      transparent 1px,
      transparent 90px),
    repeating-linear-gradient(90deg,
      #ddd 0,
      #ddd 1px,
      transparent 1px,
      transparent 90px);
  transform: rotateX(50deg) rotateZ(45deg) rotate3d(1, 0, 0, 0deg);
  transform-origin: center;
}

.selected {
  border: double 0.1px transparent;
  border-radius: 16px;
  background-image: linear-gradient(#125166, #125166),
    linear-gradient(to left, #ffffff, #52c4e9);
  background-origin: border-box;
  background-clip: padding-box, border-box;
}

.shadow-test {
  box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1);
}

@layer components {
  .animated-border {
    @apply relative inline-block;
  }

  .animated-border::before {
    content: '';
    @apply absolute -top-[1px] -left-[5px] -right-[5px] -bottom-[1px] rounded-md bg-no-repeat animate-draw-border;
    background-image:
      linear-gradient(to right, var(--border-color) 100%, transparent 100%),
      linear-gradient(to bottom, var(--border-color) 100%, transparent 100%),
      linear-gradient(to left, var(--border-color) 100%, transparent 100%),
      linear-gradient(to top, var(--border-color) 100%, transparent 100%);
    background-position: top left, top right, bottom right, bottom left;
  }
}

@layer utilities {
  .pause-on-hover:hover .animate-scroll {
    animation-play-state: paused;
  }
}